$CODE
EOF=1.
','=2.
'('=3.
')'=4.
'BEGIN'=5.
'END'=6.
';'=7.
'CLASS'=8.
':'=9.
'COERCION'=10.
'OPER'=11.
'SET'=12.
'='=13.
'INDICATION'=14.
Identifier=15.
'['=16.
']'=17.
'*'=18.
'-'=19.
'+'=20.
'COST'=21.
Integer=22.
$GRAMMAR
<$START_SYMBOL>: OIL .
ArgSig: &'_incrnodestack();_nst[_nsp]=Mkrule_15(&curpos);' .

ArgSig: TypeIdentifier &'_nst[_nsp]=Mkrule_14(&curpos, _nst[_nsp+0]);' .

ArgSig: TypeIdentifier ',' ArgSig &'_nsp -= 1;_nst[_nsp]=Mkrule_13(&curpos, _nst[_nsp+0], _nst[_nsp+1]);' .

ClassArgSig: &'_incrnodestack();_nst[_nsp]=Mkrule_6(&curpos);' .

ClassArgSig: TypeIdentifier &'_nst[_nsp]=Mkrule_5(&curpos, _nst[_nsp+0]);' .

ClassArgSig: TypeIdentifier ',' ClassArgSig &'_nsp -= 1;_nst[_nsp]=Mkrule_4(&curpos, _nst[_nsp+0], _nst[_nsp+1]);' .

ClassBody: '(' ')' 'BEGIN' G7 'END' ';' &'_nst[_nsp]=Mkrule_36(&curpos, _nst[_nsp+0]);' .

ClassBody: '(' ClassParameters ')' 'BEGIN' G7 'END' ';' &'_nsp -= 1;_nst[_nsp]=Mkrule_37(&curpos, _nst[_nsp+0], _nst[_nsp+1]);' .

Class: 'CLASS' ClassName ClassBody &'_nsp -= 1;_nst[_nsp]=Mkrule_7(&curpos, _nst[_nsp+0], _nst[_nsp+1]);' .

ClassCoerce: ClassOpDef ClassCoercionSig CostSpecification ';' &'_nsp -= 2;_nst[_nsp]=Mkrule_1(&curpos, _nst[_nsp+0], _nst[_nsp+1], _nst[_nsp+2]);' .

ClassCoercionSig: '(' ClassOneArg ')' ':' TypeIdentifier &'_nsp -= 1;_nst[_nsp]=Mkrule_3(&curpos, _nst[_nsp+0], _nst[_nsp+1]);' .

ClassOneArg: TypeIdentifier &'_nst[_nsp]=Mkrule_5(&curpos, _nst[_nsp+0]);' .

ClassOpDefList: G11 &'_nst[_nsp]=Mkrule_38(&curpos, _nst[_nsp+0]);' .

ClassOperation: 'COERCION' G10 &'_nst[_nsp]=Mkrule_39(&curpos, _nst[_nsp+0]);' .

ClassOperation: 'OPER' G9 &'_nst[_nsp]=Mkrule_40(&curpos, _nst[_nsp+0]);' .

ClassOperationSig: '(' ClassArgSig ')' ':' TypeIdentifier &'_nsp -= 1;_nst[_nsp]=Mkrule_3(&curpos, _nst[_nsp+0], _nst[_nsp+1]);' .

ClassOper: ClassOpDefList ClassOperationSig CostSpecification ';' &'_nsp -= 2;_nst[_nsp]=Mkrule_2(&curpos, _nst[_nsp+0], _nst[_nsp+1], _nst[_nsp+2]);' .

ClassParameters: G8 &'_nst[_nsp]=Mkrule_41(&curpos, _nst[_nsp+0]);' .

Coerce: OpDef CoercionSig CostSpecification ';' &'_nsp -= 2;_nst[_nsp]=Mkrule_9(&curpos, _nst[_nsp+0], _nst[_nsp+1], _nst[_nsp+2]);' .

CoercionSig: '(' OneArg ')' ':' TypeIdentifier &'_nsp -= 1;_nst[_nsp]=Mkrule_12(&curpos, _nst[_nsp+0], _nst[_nsp+1]);' .

EquivalenceClass: 'SET' SetIdDef '=' xTypeExpr ';' &'_nsp -= 1;_nst[_nsp]=Mkrule_22(&curpos, _nst[_nsp+0], _nst[_nsp+1]);' .

G1: &'_incrnodestack();_nst[_nsp]=Mkrule_42(&curpos);' .

G10: ClassCoerce &'_nst[_nsp]=Mkrule_43(&curpos, _nst[_nsp+0]);' .

G10: G10 ClassCoerce &'_nsp -= 1;_nst[_nsp]=Mkrule_44(&curpos, _nst[_nsp+0], _nst[_nsp+1]);' .

G11: ClassOpDef &'_nst[_nsp]=Mkrule_45(&curpos, _nst[_nsp+0]);' .

G11: G11 ',' ClassOpDef &'_nsp -= 1;_nst[_nsp]=Mkrule_46(&curpos, _nst[_nsp+0], _nst[_nsp+1]);' .

G12: G12 ',' Singleton &'_nsp -= 1;_nst[_nsp]=Mkrule_47(&curpos, _nst[_nsp+0], _nst[_nsp+1]);' .

G12: Singleton &'_nst[_nsp]=Mkrule_48(&curpos, _nst[_nsp+0]);' .

G1: G1 SpecificationElement &'_nsp -= 1;_nst[_nsp]=Mkrule_49(&curpos, _nst[_nsp+0], _nst[_nsp+1]);' .

G2: G2 Oper &'_nsp -= 1;_nst[_nsp]=Mkrule_50(&curpos, _nst[_nsp+0], _nst[_nsp+1]);' .

G2: Oper &'_nst[_nsp]=Mkrule_51(&curpos, _nst[_nsp+0]);' .

G3: Coerce &'_nst[_nsp]=Mkrule_52(&curpos, _nst[_nsp+0]);' .

G3: G3 Coerce &'_nsp -= 1;_nst[_nsp]=Mkrule_53(&curpos, _nst[_nsp+0], _nst[_nsp+1]);' .

G4: G4 ',' OpDef &'_nsp -= 1;_nst[_nsp]=Mkrule_54(&curpos, _nst[_nsp+0], _nst[_nsp+1]);' .

G4: OpDef &'_nst[_nsp]=Mkrule_55(&curpos, _nst[_nsp+0]);' .

G5: G5 Indication &'_nsp -= 1;_nst[_nsp]=Mkrule_56(&curpos, _nst[_nsp+0], _nst[_nsp+1]);' .

G5: Indication &'_nst[_nsp]=Mkrule_57(&curpos, _nst[_nsp+0]);' .

G6: G6 ',' OpRef &'_nsp -= 1;_nst[_nsp]=Mkrule_58(&curpos, _nst[_nsp+0], _nst[_nsp+1]);' .

G6: OpRef &'_nst[_nsp]=Mkrule_59(&curpos, _nst[_nsp+0]);' .

G7: ClassOperation &'_nst[_nsp]=Mkrule_60(&curpos, _nst[_nsp+0]);' .

G7: G7 ClassOperation &'_nsp -= 1;_nst[_nsp]=Mkrule_61(&curpos, _nst[_nsp+0], _nst[_nsp+1]);' .

G8: ClassParameter &'_nst[_nsp]=Mkrule_62(&curpos, _nst[_nsp+0]);' .

G8: G8 ',' ClassParameter &'_nsp -= 1;_nst[_nsp]=Mkrule_63(&curpos, _nst[_nsp+0], _nst[_nsp+1]);' .

G9: ClassOper &'_nst[_nsp]=Mkrule_64(&curpos, _nst[_nsp+0]);' .

G9: G9 ClassOper &'_nsp -= 1;_nst[_nsp]=Mkrule_65(&curpos, _nst[_nsp+0], _nst[_nsp+1]);' .

Identification: 'INDICATION' G5 &'_nst[_nsp]=Mkrule_66(&curpos, _nst[_nsp+0]);' .

Indication: IndDef ':' OpRefList ';' &'_nsp -= 1;_nst[_nsp]=Mkrule_8(&curpos, _nst[_nsp+0], _nst[_nsp+1]);' .

OIL: G1 &'_nst[_nsp]=Mkrule_67(&curpos, _nst[_nsp+0]);' .

OneArg: TypeIdentifier &'_nst[_nsp]=Mkrule_14(&curpos, _nst[_nsp+0]);' .

OpDefList: G4 &'_nst[_nsp]=Mkrule_68(&curpos, _nst[_nsp+0]);' .

Operation: 'COERCION' G3 &'_nst[_nsp]=Mkrule_69(&curpos, _nst[_nsp+0]);' .

Operation: 'OPER' G2 &'_nst[_nsp]=Mkrule_70(&curpos, _nst[_nsp+0]);' .

OperationSig: '(' ArgSig ')' ':' TypeIdentifier &'_nsp -= 1;_nst[_nsp]=Mkrule_12(&curpos, _nst[_nsp+0], _nst[_nsp+1]);' .

Oper: OpDefList OperationSig CostSpecification ';' &'_nsp -= 2;_nst[_nsp]=Mkrule_10(&curpos, _nst[_nsp+0], _nst[_nsp+1], _nst[_nsp+2]);' .

OpRefList: G6 &'_nst[_nsp]=Mkrule_71(&curpos, _nst[_nsp+0]);' .

SetIdDef: Identifier &'_incrnodestack();_nst[_nsp]=Mkrule_24(&curpos, MkIdentifier(&(T_POS(TokenStack(0))), T_ATTR(TokenStack(0))));' .

SetIdUse: Identifier &'_incrnodestack();_nst[_nsp]=Mkrule_23(&curpos, MkIdentifier(&(T_POS(TokenStack(0))), T_ATTR(TokenStack(0))));' .

Singleton: TypeIdentifier &'_nst[_nsp]=Mkrule_16(&curpos, _nst[_nsp+0]);' .

SpecificationElement: Class &'_nst[_nsp]=Mkrule_72(&curpos, _nst[_nsp+0]);' .

SpecificationElement: EquivalenceClass &'_nst[_nsp]=Mkrule_73(&curpos, _nst[_nsp+0]);' .

SpecificationElement: Identification &'_nst[_nsp]=Mkrule_74(&curpos, _nst[_nsp+0]);' .

SpecificationElement: Operation &'_nst[_nsp]=Mkrule_75(&curpos, _nst[_nsp+0]);' .

xTEprimary: SetIdUse &'_nst[_nsp]=Mkrule_21(&curpos, _nst[_nsp+0]);' .

xTEprimary: '(' xTypeExpr ')' .

xTEprimary: '[' xTypeList ']' &'_nst[_nsp]=Mkrule_17(&curpos, _nst[_nsp+0]);' .

xTEterm: xTEprimary .

xTEterm: xTEterm '*' xTEprimary &'_nsp -= 1;_nst[_nsp]=Mkrule_18(&curpos, _nst[_nsp+0], _nst[_nsp+1]);' .

xTypeExpr: xTEterm .

xTypeExpr: xTypeExpr '-' xTEterm &'_nsp -= 1;_nst[_nsp]=Mkrule_19(&curpos, _nst[_nsp+0], _nst[_nsp+1]);' .

xTypeExpr: xTypeExpr '+' xTEterm &'_nsp -= 1;_nst[_nsp]=Mkrule_20(&curpos, _nst[_nsp+0], _nst[_nsp+1]);' .

xTypeList: G12 &'_nst[_nsp]=Mkrule_76(&curpos, _nst[_nsp+0]);' .

CostSpecification: &'_incrnodestack();_nst[_nsp]=Mkrule_35(&curpos);' .

CostSpecification: 'COST' Integer &'_incrnodestack();_nst[_nsp]=Mkrule_34(&curpos, MkInteger(&(T_POS(TokenStack(1))), T_ATTR(TokenStack(1))));' .

OpDef: &'_incrnodestack();_nst[_nsp]=Mkrule_33(&curpos);' .

ClassOpDef: &'_incrnodestack();_nst[_nsp]=Mkrule_32(&curpos);' .

OpDef: Identifier &'_incrnodestack();_nst[_nsp]=Mkrule_31(&curpos, MkIdentifier(&(T_POS(TokenStack(0))), T_ATTR(TokenStack(0))));' .

ClassOpDef: Identifier &'_incrnodestack();_nst[_nsp]=Mkrule_30(&curpos, MkIdentifier(&(T_POS(TokenStack(0))), T_ATTR(TokenStack(0))));' .

TypeIdentifier: Identifier &'_incrnodestack();_nst[_nsp]=Mkrule_29(&curpos, MkIdentifier(&(T_POS(TokenStack(0))), T_ATTR(TokenStack(0))));' .

ClassName: Identifier &'_incrnodestack();_nst[_nsp]=Mkrule_28(&curpos, MkIdentifier(&(T_POS(TokenStack(0))), T_ATTR(TokenStack(0))));' .

ClassParameter: Identifier &'_incrnodestack();_nst[_nsp]=Mkrule_27(&curpos, MkIdentifier(&(T_POS(TokenStack(0))), T_ATTR(TokenStack(0))));' .

IndDef: Identifier &'_incrnodestack();_nst[_nsp]=Mkrule_26(&curpos, MkIdentifier(&(T_POS(TokenStack(0))), T_ATTR(TokenStack(0))));' .

OpRef: Identifier &'_incrnodestack();_nst[_nsp]=Mkrule_25(&curpos, MkIdentifier(&(T_POS(TokenStack(0))), T_ATTR(TokenStack(0))));' .

