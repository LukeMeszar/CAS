$CODE
EOF=1.
','=2.
String=3.
':'=4.
';'=5.
Identifier=6.
'::'=7.
'::='=8.
'('=9.
')'=10.
'COST'=11.
Integer=12.
$GRAMMAR
<$START_SYMBOL>: Source .
G1: G1 ',' SymbolDef &'_nsp -= 1;_nst[_nsp]=Mk2rule_16(&curpos, _nst[_nsp+0], _nst[_nsp+1]);' .

G1: SymbolDef .

Nonterms: G1 &'_nst[_nsp]=Mkrule_16(&curpos, _nst[_nsp+0]);' .

Source: LST_Source &'_nst[_nsp]=Mkrule_19(&curpos, _nst[_nsp]);' .
LST_Source: LST_Source Include &'_nsp -=1; _nst[_nsp]=Mk2rule_19(&curpos, _nst[_nsp], _nst[_nsp+1]);' .
LST_Source: LST_Source Declaration &'_nsp -=1; _nst[_nsp]=Mk2rule_19(&curpos, _nst[_nsp], _nst[_nsp+1]);' .
LST_Source: LST_Source Pattern &'_nsp -=1; _nst[_nsp]=Mk2rule_19(&curpos, _nst[_nsp], _nst[_nsp+1]);' .
LST_Source: &'_incrnodestack(); _nst[_nsp]=Mk0rule_19(&curpos);' .
Include: String &'_incrnodestack();_nst[_nsp]=Mkrule_18(&curpos, MkString(&(T_POS(TokenStack(0))), T_ATTR(TokenStack(0))));' .

Declaration: Nonterms ':' Type ';' &'_nsp -= 1;_nst[_nsp]=Mkrule_17(&curpos, _nst[_nsp+0], _nst[_nsp+1]);' .

Pattern: Signature ':' Identifier Cost ';' &'_nsp -= 1;_nst[_nsp]=Mkrule_15(&curpos, _nst[_nsp+0], MkIdentifier(&(T_POS(TokenStack(2))), T_ATTR(TokenStack(2))), _nst[_nsp+1]);' .

Pattern: Signature '::' Identifier Cost ';' &'_nsp -= 1;_nst[_nsp]=Mkrule_14(&curpos, _nst[_nsp+0], MkIdentifier(&(T_POS(TokenStack(2))), T_ATTR(TokenStack(2))), _nst[_nsp+1]);' .

Signature: SymbolUse '::=' Child Function &'_nsp -= 2;_nst[_nsp]=Mkrule_13(&curpos, _nst[_nsp+0], _nst[_nsp+1], _nst[_nsp+2]);' .

Child: SymbolUse &'_nst[_nsp]=Mkrule_12(&curpos, _nst[_nsp+0]);' .

Child: Terminal '(' ')' &'_nst[_nsp]=Mkrule_11(&curpos, _nst[_nsp+0]);' .

Child: Terminal '(' Children ')' &'_nsp -= 1;_nst[_nsp]=Mkrule_10(&curpos, _nst[_nsp+0], _nst[_nsp+1]);' .

Children: Children ',' Child &'_nsp -= 1;_nst[_nsp]=Mkrule_9(&curpos, _nst[_nsp+0], _nst[_nsp+1]);' .

Children: Child &'_nst[_nsp]=Mkrule_8(&curpos, _nst[_nsp+0]);' .

Function: &'_incrnodestack();_nst[_nsp]=Mkrule_7(&curpos);' .

Cost: &'_incrnodestack();_nst[_nsp]=Mkrule_6(&curpos);' .

Cost: 'COST' Integer &'_incrnodestack();_nst[_nsp]=Mkrule_5(&curpos, MkInteger(&(T_POS(TokenStack(1))), T_ATTR(TokenStack(1))));' .

Type: Identifier &'_incrnodestack();_nst[_nsp]=Mkrule_4(&curpos, MkIdentifier(&(T_POS(TokenStack(0))), T_ATTR(TokenStack(0))));' .

Terminal: Identifier &'_incrnodestack();_nst[_nsp]=Mkrule_3(&curpos, MkIdentifier(&(T_POS(TokenStack(0))), T_ATTR(TokenStack(0))));' .

SymbolDef: Identifier &'_incrnodestack();_nst[_nsp]=Mkrule_2(&curpos, MkIdentifier(&(T_POS(TokenStack(0))), T_ATTR(TokenStack(0))));' .

SymbolUse: Identifier &'_incrnodestack();_nst[_nsp]=Mkrule_1(&curpos, MkIdentifier(&(T_POS(TokenStack(0))), T_ATTR(TokenStack(0))));' .

