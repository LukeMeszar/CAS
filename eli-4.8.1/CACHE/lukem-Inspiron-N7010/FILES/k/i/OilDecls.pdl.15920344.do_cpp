# 1 "/home/lukem/Dropbox/CAS/eli-4.8.1/CACHE/lukem-Inspiron-N7010/FILES/k/i/OilDecls.pdl.15898386.pdl"
"OilDecls.h"
IsType: int;
OilType: tOilType;
OilOp: tOilOp;
OilClass: tOilClass;
Equal -> OilOp={(tOilOp)&Oil_o56};
IntegerAssignment -> OilOp={(tOilOp)&Oil_o8};
int_t -> IsType={1}, OilType={(tOilType)&Oil_t1};
TruncatingAssignment -> OilOp={(tOilOp)&Oil_o12};
float_t -> IsType={1}, OilType={(tOilType)&Oil_t2};
FloatingAssignment -> OilOp={(tOilOp)&Oil_o15};
BarBar -> OilOp={(tOilOp)&Oil_o57};
Disjunction -> OilOp={(tOilOp)&Oil_o16};
AmpAmp -> OilOp={(tOilOp)&Oil_o58};
Conjunction -> OilOp={(tOilOp)&Oil_o17};
Exclam -> OilOp={(tOilOp)&Oil_o59};
Complement -> OilOp={(tOilOp)&Oil_o18};
EquEqu -> OilOp={(tOilOp)&Oil_o60};
IntEqual -> OilOp={(tOilOp)&Oil_o19};
FloatEqual -> OilOp={(tOilOp)&Oil_o21};
Less -> OilOp={(tOilOp)&Oil_o61};
IntLess -> OilOp={(tOilOp)&Oil_o22};
FloatLess -> OilOp={(tOilOp)&Oil_o23};
Greater -> OilOp={(tOilOp)&Oil_o62};
IntGreater -> OilOp={(tOilOp)&Oil_o24};
FloatGreater -> OilOp={(tOilOp)&Oil_o25};
Plus -> OilOp={(tOilOp)&Oil_o63};
IntegerAddition -> OilOp={(tOilOp)&Oil_o26};
FloatingAddition -> OilOp={(tOilOp)&Oil_o27};
Minus -> OilOp={(tOilOp)&Oil_o64};
IntegerSubtraction -> OilOp={(tOilOp)&Oil_o28};
FloatingSubtraction -> OilOp={(tOilOp)&Oil_o29};
Star -> OilOp={(tOilOp)&Oil_o65};
IntegerMultiplication -> OilOp={(tOilOp)&Oil_o30};
FloatingMultiplication -> OilOp={(tOilOp)&Oil_o31};
Slash -> OilOp={(tOilOp)&Oil_o66};
IntegerDivision -> OilOp={(tOilOp)&Oil_o32};
FloatingDivision -> OilOp={(tOilOp)&Oil_o33};
Percent -> OilOp={(tOilOp)&Oil_o67};
Remainder -> OilOp={(tOilOp)&Oil_o34};
UMinus -> OilOp={(tOilOp)&Oil_o68};
IntegerNegation -> OilOp={(tOilOp)&Oil_o35};
FloatingNegation -> OilOp={(tOilOp)&Oil_o36};
Return -> OilOp={(tOilOp)&Oil_o69};
IntOutput -> OilOp={(tOilOp)&Oil_o37};
FloatOutput -> OilOp={(tOilOp)&Oil_o38};
IntToFloat -> OilOp={(tOilOp)&Oil_o40};
IntToVoid -> OilOp={(tOilOp)&Oil_o43};
void_t -> IsType={1}, OilType={(tOilType)&Oil_t3};
FloatToVoid -> OilOp={(tOilOp)&Oil_o46};
UnkI -> OilOp={(tOilOp)&Oil_o50};
unknown_t -> IsType={1}, OilType={(tOilType)&Oil_t4};
UnkF -> OilOp={(tOilOp)&Oil_o55};
