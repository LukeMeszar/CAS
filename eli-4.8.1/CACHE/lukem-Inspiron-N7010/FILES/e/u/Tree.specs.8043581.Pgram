$CODE
EOF=1.
'|'=2.
'$'=3.
'{'=4.
'}'=5.
Number=6.
PtgType=7.
'['=8.
xIdentifier=9.
']'=10.
':'=11.
'RULE'=12.
'::='=13.
'END'=14.
';'=15.
'LISTOF'=16.
xLiteral=17.
CString=18.
$GRAMMAR
<$START_SYMBOL>: xRoot .
G1: G1 '|' xSymbol &'_nsp -= 1;_nst[_nsp]=Mk2rule_14(&curpos, _nst[_nsp+0], _nst[_nsp+1]);' .

G1: xSymbol .

G2: &'_incrnodestack();_nst[_nsp]=Mkrule_19(&curpos);' .

G2: G2 PatternSpec &'_nsp -= 1;_nst[_nsp]=Mkrule_20(&curpos, _nst[_nsp+0], _nst[_nsp+1]);' .

G3: &'_incrnodestack();_nst[_nsp]=Mk0rule_8(NoPosition);' .

G3: G3 Item &'_nsp -= 1;_nst[_nsp]=Mk2rule_8(&curpos, _nst[_nsp+0], _nst[_nsp+1]);' .

G4: G4 Item &'_nsp -= 1;_nst[_nsp]=Mk2rule_8(&curpos, _nst[_nsp+0], _nst[_nsp+1]);' .

G4: Item .

Insert: G4 &'_nst[_nsp]=Mkrule_8(&curpos, _nst[_nsp+0]);' .

Item: '$' &'_incrnodestack();_nst[_nsp]=Mkrule_6(&curpos);' .

Item: '{' Insert '}' &'_nst[_nsp]=Mkrule_1(&curpos, _nst[_nsp+0]);' .

Item: '$' Number &'_incrnodestack();_nst[_nsp]=Mkrule_5(&curpos, MkNumber(&(T_POS(TokenStack(1))), T_ATTR(TokenStack(1))));' .

Item: '$' Number PtgType &'_incrnodestack();_nst[_nsp]=Mkrule_3(&curpos, MkNumber(&(T_POS(TokenStack(1))), T_ATTR(TokenStack(1))), MkPtgType(&(T_POS(TokenStack(2))), T_ATTR(TokenStack(2))));' .

Item: '$' PtgType &'_incrnodestack();_nst[_nsp]=Mkrule_4(&curpos, MkPtgType(&(T_POS(TokenStack(1))), T_ATTR(TokenStack(1))));' .

Items: G3 &'_nst[_nsp]=Mkrule_8(&curpos, _nst[_nsp+0]);' .

Item: '[' xIdentifier Items ']' &'_nst[_nsp]=Mkrule_2(&curpos, MkxIdentifier(&(T_POS(TokenStack(1))), T_ATTR(TokenStack(1))), _nst[_nsp+0]);' .

PatternSpec: PatternName ':' Items &'_nsp -= 1;_nst[_nsp]=Mkrule_10(&curpos, _nst[_nsp+0], _nst[_nsp+1]);' .

PTGSpec: G2 &'_nst[_nsp]=Mkrule_21(&curpos, _nst[_nsp+0]);' .

Syms: &'_incrnodestack();_nst[_nsp]=Mkrule_14(&curpos, Mk0rule_14(NoPosition));' .

Syms: G1 &'_nst[_nsp]=Mkrule_14(&curpos, _nst[_nsp+0]);' .

xRoot: xGrammar PTGSpec &'_nsp -= 1;_nst[_nsp]=Mkrule_22(&curpos, _nst[_nsp+0], _nst[_nsp+1]);' .

xRule: PtgType &'_incrnodestack();_nst[_nsp]=Mkrule_23(&curpos, MkPtgType(&(T_POS(TokenStack(0))), T_ATTR(TokenStack(0))));' .

xRule: xIdentifier &'_incrnodestack();_nst[_nsp]=Mkrule_24(&curpos, MkxIdentifier(&(T_POS(TokenStack(0))), T_ATTR(TokenStack(0))));' .

xSymbol: PtgType &'_incrnodestack();_nst[_nsp]=Mkrule_25(&curpos, MkPtgType(&(T_POS(TokenStack(0))), T_ATTR(TokenStack(0))));' .

xSymbol: xIdentifier &'_incrnodestack();_nst[_nsp]=Mkrule_26(&curpos, MkxIdentifier(&(T_POS(TokenStack(0))), T_ATTR(TokenStack(0))));' .

xGrammar: LST_xGrammar &'_nst[_nsp]=Mkrule_18(&curpos, _nst[_nsp]);' .
LST_xGrammar: LST_xGrammar xProduction &'_nsp -=1; _nst[_nsp]=Mk2rule_18(&curpos, _nst[_nsp], _nst[_nsp+1]);' .
LST_xGrammar: &'_incrnodestack(); _nst[_nsp]=Mk0rule_18(&curpos);' .
xProduction: 'RULE' xRule ':' xSymbol '::=' xRHS 'END' ';' &'_nsp -= 2;_nst[_nsp]=Mkrule_17(&curpos, _nst[_nsp+0], _nst[_nsp+1], _nst[_nsp+2]);' .

xProduction: 'RULE' xRule ':' xSymbol 'LISTOF' Syms 'END' ';' &'_nsp -= 2;_nst[_nsp]=Mkrule_16(&curpos, _nst[_nsp+0], _nst[_nsp+1], _nst[_nsp+2]);' .

xRHS: LST_xRHS &'_nst[_nsp]=Mkrule_15(&curpos, _nst[_nsp]);' .
LST_xRHS: LST_xRHS Element &'_nsp -=1; _nst[_nsp]=Mk2rule_15(&curpos, _nst[_nsp], _nst[_nsp+1]);' .
LST_xRHS: &'_incrnodestack(); _nst[_nsp]=Mk0rule_15(&curpos);' .
Element: xSymbol &'_nst[_nsp]=Mkrule_13(&curpos, _nst[_nsp+0]);' .

Element: '$' xSymbol &'_nst[_nsp]=Mkrule_12(&curpos, _nst[_nsp+0]);' .

Element: xLiteral &'_incrnodestack();_nst[_nsp]=Mkrule_11(&curpos, MkxLiteral(&(T_POS(TokenStack(0))), T_ATTR(TokenStack(0))));' .

PatternName: xIdentifier &'_incrnodestack();_nst[_nsp]=Mkrule_9(&curpos, MkxIdentifier(&(T_POS(TokenStack(0))), T_ATTR(TokenStack(0))));' .

Item: CString &'_incrnodestack();_nst[_nsp]=Mkrule_7(&curpos, MkCString(&(T_POS(TokenStack(0))), T_ATTR(TokenStack(0))));' .

